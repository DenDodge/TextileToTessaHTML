using System;
using System.Collections.Generic;
using TextileToTessaHTML;

namespace TestApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, Guid> attachemntsIds = new Dictionary<string, Guid>()
            {
                { "1.png", new Guid("49ba1622-55d9-48c5-a4d5-9a85801fd62a") },
                { "2.png", new Guid("8166b72b-3a3b-4198-9cb9-657da5d9f8ee") },
                { "07.11.12.png", new Guid("8b22ba42-6404-4130-bd1b-ff2fb037f893") }
            };

            string filesDirectory = $"D:\\WORK_SYNTELLECT\\OtherFiles\\Migration\\1072";

            string testString = "Как нам посоветовали, используем назначение группы для разделения списка файлов на два элемента FileListViewModel\r\nУстанавливаю метод определяющий имя добавляемого файла. Но этот метод *не вызывается*!\r\nПробовал и лямбдой и отдельным методом. Пробовал \"играться\" свойствами и самого контрола и объекта context.FileContainer.\r\nРезультат всегда один - null в полях CategoryID, CategoryCaption\r\n\r\n<pre><code class=\"C\">\r\n    //Сканы договора\r\n    IFileControl scanFileControl = ((FileListViewModel)context.Model.Controls[SCAN_FILES_CONTROL]).FileControl;\r\n    scanFileControl.IsCategoriesEnabled = true;\r\n    scanFileControl.IsManualCategoriesCreationDisabled = true;\r\n    scanFileControl.SetNewFileAction(ScanNewFileActon);\r\n    //scanFileControl.SetNewFileAction(x =>\r\n    //{\r\n    //    //Guid? categoryID = null;\r\n    //    Guid? categoryID = Guid.NewGuid();\r\n    //    x.FileCategory = new FileCategory(categoryID, SCAN_FILES_GROUP_NAME);\r\n    //    x.SelectFileCategory = false;\r\n    //});\r\n    //КДДО\r\n    IFileControl kddoFileControl = ((FileListViewModel)context.Model.Controls[KDDO_FILES_CONTROL]).FileControl;\r\n    kddoFileControl.SetNewFileAction(this.KddoNewFileActon);\r\n    //kddoFileControl.SetNewFileAction(x =>\r\n    //{\r\n    //    Guid? categoryID = null;\r\n    //    x.FileCategory = new FileCategory(categoryID, KDDO_FILES_GROUP_NAME);\r\n    //    x.SelectFileCategory = false;\r\n    //});\r\n\r\n    context.FileContainer.ContainerFileAdding += (s, e) =>\r\n    {\r\n        switch (e.Control.Name)\r\n        {\r\n            case SCAN_FILES_CONTROL:\r\n                if (e.File.Category == null || !SCAN_FILES_GROUP_NAME.Equals(e.File.Category.Caption, StringComparison.InvariantCultureIgnoreCase))\r\n                {\r\n                    e.Cancel = true;\r\n                }\r\n                break;\r\n\r\n            case KDDO_FILES_CONTROL:\r\n                if (e.File.Category == null || !KDDO_FILES_GROUP_NAME.Equals(e.File.Category.Caption, StringComparison.InvariantCultureIgnoreCase))\r\n                {\r\n                    e.Cancel = true;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nconst string SCAN_FILES_CONTROL = \"ScanFilesControl\";\r\nconst string KDDO_FILES_CONTROL = \"KddoFilesControl\";\r\nconst string SCAN_FILES_GROUP_NAME = \"Scan\";\r\nconst string KDDO_FILES_GROUP_NAME = \"KDDO\";\r\n\r\nprivate void ScanNewFileActon(INewFileContext fileContext)\r\n{\r\n    //Вот сюда ставлю брейкпоинт. Никогда этот метод не вызывается. \r\n    Guid? categoryId = null;\r\n    fileContext.FileCategory = new FileCategory(categoryId, SCAN_FILES_GROUP_NAME);\r\n    fileContext.SelectFileCategory = false;\r\n}\r\n\r\nprivate void KddoNewFileActon(INewFileContext fileContext)\r\n{\r\n    Guid? categoryId = null;\r\n    fileContext.FileCategory = new FileCategory(categoryId, KDDO_FILES_GROUP_NAME);\r\n    fileContext.SelectFileCategory = false;\r\n}\r\n</code></pre>\r\n\r\n\r\n<pre>\r\n{\r\n...\r\n    Files: [\r\n        {\r\n            .flags: 0,\r\n            .state: 4,\r\n            .versionsLoaded: false,\r\n            CategoryCaption: null,\r\n            CategoryID: null,\r\n            ExternalSource: null,\r\n            Hash: null,\r\n            Info: null,\r\n            IsVirtual: false,\r\n            Name: \"log.txt\",\r\n            OriginalFileID: null,\r\n            OriginalVersionRowID: null,\r\n            RowID: a8a31327-a466-45a2-8570-eac19a375464,\r\n            SectionRows: null,\r\n            Size: -1L,\r\n            StoreSource: 1,\r\n            TaskID: null,\r\n            TypeCaption: \"$CardTypes_TypesNames_File\",\r\n            TypeID: ab387c69-fd62-0655-bbc3-b879e433a143,\r\n            TypeName: \"File\",\r\n            VersionNumber: 1,\r\n            VersionRowID: 65bc7b98-c58c-4eb4-95f8-cb2c5ac83a2b,\r\n            Versions: null,\r\n            Card: {\r\n                Created: null,\r\n                CreatedByID: 27c1a15a-eefc-4e95-95f1-b4d762c9cd29,\r\n                CreatedByName: \"Воробьев В.М.\",\r\n                Flags: 0,\r\n                ID: a8a31327-a466-45a2-8570-eac19a375464,\r\n                Info: null,\r\n                Modified: null,\r\n                ModifiedByID: 27c1a15a-eefc-4e95-95f1-b4d762c9cd29,\r\n                ModifiedByName: \"Воробьев В.М.\",\r\n                TypeCaption: \"$CardTypes_TypesNames_File\",\r\n                TypeID: ab387c69-fd62-0655-bbc3-b879e433a143,\r\n                TypeName: \"File\",\r\n                Version: 1,\r\n                Permissions: {\r\n                    CardPermissions: 87381,\r\n                    FilePermissions: null,\r\n                    Sections: null\r\n                },\r\n                Sections: {\r\n                    FileSignatures: {\r\n                        .table: 1,\r\n                        Rows: null\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ],\r\n...\r\n}\r\n</pre>";
            Parser parser = new Parser();
            var result = parser.GetParseToTessaHTMLString(testString, filesDirectory, attachemntsIds, false);
        }
    }
}
